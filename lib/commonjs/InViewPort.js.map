{"version":3,"sources":["InViewPort.tsx"],"names":["InViewPort","PureComponent","constructor","props","state","rectTop","rectBottom","componentDidMount","disabled","startWatching","componentWillUnmount","stopWatching","UNSAFE_componentWillReceiveProps","nextProps","lastValue","interval","setInterval","myview","measure","x","y","width","height","pageX","pageY","setState","rectWidth","isInViewPort","delay","clearInterval","window","Dimensions","get","isVisible","onChange","render","component","children"],"mappings":";;;;;;;AACA;;AACA;;;;;;;;AAEe,MAAMA,UAAN,SAAyBC,oBAAzB,CAAuC;AACpDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,OAAO,EAAE,CAAX;AAAcC,MAAAA,UAAU,EAAE;AAA1B,KAAb;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,QAAI,CAAC,KAAKJ,KAAL,CAAWK,QAAhB,EAA0B;AACxB,WAAKC,aAAL;AACD;AACF;;AAEDC,EAAAA,oBAAoB,GAAG;AACrB,SAAKC,YAAL;AACD;;AAEDC,EAAAA,gCAAgC,CAACC,SAAD,EAAY;AAC1C,QAAIA,SAAS,CAACL,QAAd,EAAwB;AACtB,WAAKG,YAAL;AACD,KAFD,MAEO;AACL,WAAKG,SAAL,GAAiB,IAAjB;AACA,WAAKL,aAAL;AACD;AACF;;AAEDA,EAAAA,aAAa,GAAG;AACd,QAAI,KAAKM,QAAT,EAAmB;AACjB;AACD;;AACD,SAAKA,QAAL,GAAgBC,WAAW,CAAC,MAAM;AAChC,UAAI,CAAC,KAAKC,MAAV,EAAkB;AAChB;AACD;;AACD,WAAKA,MAAL,CAAYC,OAAZ,CAAoB,CAACC,CAAD,EAAIC,CAAJ,EAAOC,KAAP,EAAcC,MAAd,EAAsBC,KAAtB,EAA6BC,KAA7B,KAAuC;AACzD,aAAKC,QAAL,CAAc;AACZpB,UAAAA,OAAO,EAAEmB,KADG;AAEZlB,UAAAA,UAAU,EAAEkB,KAAK,GAAGF,MAFR;AAGZI,UAAAA,SAAS,EAAEH,KAAK,GAAGF;AAHP,SAAd;AAKD,OAND;AAOA,WAAKM,YAAL;AACD,KAZ0B,EAYxB,KAAKxB,KAAL,CAAWyB,KAAX,IAAoB,GAZI,CAA3B;AAaD;;AAEDjB,EAAAA,YAAY,GAAG;AACb,SAAKI,QAAL,GAAgBc,aAAa,CAAC,KAAKd,QAAN,CAA7B;AACD;;AAEDY,EAAAA,YAAY,GAAG;AACb,UAAMG,MAAM,GAAGC,wBAAWC,GAAX,CAAe,QAAf,CAAf;;AACA,UAAMC,SAAS,GACb,KAAK7B,KAAL,CAAWE,UAAX,KAA0B,CAA1B,IACA,KAAKF,KAAL,CAAWC,OAAX,IAAsB,CADtB,IAEA,KAAKD,KAAL,CAAWE,UAAX,IAAyBwB,MAAM,CAACR,MAFhC,IAGA,KAAKlB,KAAL,CAAWsB,SAAX,GAAuB,CAHvB,IAIA,KAAKtB,KAAL,CAAWsB,SAAX,IAAwBI,MAAM,CAACT,KALjC;;AAOA,QAAI,KAAKP,SAAL,KAAmBmB,SAAvB,EAAkC;AAChC,WAAKnB,SAAL,GAAiBmB,SAAjB;AACA,WAAK9B,KAAL,CAAW+B,QAAX,CAAoBD,SAApB;AACD;AACF;;AAEDE,EAAAA,MAAM,GAAG;AACP,wBACE,6BAAC,iBAAD;AACE,MAAA,WAAW,EAAE,KADf;AAEE,MAAA,GAAG,EAAGC,SAAD,IAAe;AAClB,aAAKnB,MAAL,GAAcmB,SAAd;AACD;AAJH,OAKM,KAAKjC,KALX,GAOG,KAAKA,KAAL,CAAWkC,QAPd,CADF;AAWD;;AA3EmD","sourcesContent":["// @ts-nocheck\nimport React, { PureComponent } from 'react';\nimport { View, Dimensions } from 'react-native';\n\nexport default class InViewPort extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = { rectTop: 0, rectBottom: 0 };\n  }\n\n  componentDidMount() {\n    if (!this.props.disabled) {\n      this.startWatching();\n    }\n  }\n\n  componentWillUnmount() {\n    this.stopWatching();\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.disabled) {\n      this.stopWatching();\n    } else {\n      this.lastValue = null;\n      this.startWatching();\n    }\n  }\n\n  startWatching() {\n    if (this.interval) {\n      return;\n    }\n    this.interval = setInterval(() => {\n      if (!this.myview) {\n        return;\n      }\n      this.myview.measure((x, y, width, height, pageX, pageY) => {\n        this.setState({\n          rectTop: pageY,\n          rectBottom: pageY + height,\n          rectWidth: pageX + width,\n        });\n      });\n      this.isInViewPort();\n    }, this.props.delay || 100);\n  }\n\n  stopWatching() {\n    this.interval = clearInterval(this.interval);\n  }\n\n  isInViewPort() {\n    const window = Dimensions.get('window');\n    const isVisible =\n      this.state.rectBottom !== 0 &&\n      this.state.rectTop >= 0 &&\n      this.state.rectBottom <= window.height &&\n      this.state.rectWidth > 0 &&\n      this.state.rectWidth <= window.width;\n\n    if (this.lastValue !== isVisible) {\n      this.lastValue = isVisible;\n      this.props.onChange(isVisible);\n    }\n  }\n\n  render() {\n    return (\n      <View\n        collapsable={false}\n        ref={(component) => {\n          this.myview = component;\n        }}\n        {...this.props}\n      >\n        {this.props.children}\n      </View>\n    );\n  }\n}\n"]}